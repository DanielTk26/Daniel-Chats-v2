{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Chats.js","components/Login.js","components/App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","Chats","useContext","console","log","handleLogout","a","signOut","getFile","url","fetch","response","blob","data","File","type","axios","get","headers","process","email","uid","then","catch","formdata","FormData","append","photoURL","avatar","name","post","error","className","onClick","height","projectID","userName","userSecret","Login","alert","id","signInWithRedirect","GoogleAuthProvider","GoogleOutlined","App","style","fontFamily","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAIaA,G,OAAOC,IAASC,cAAc,CACvCC,OAAQ,0CACVC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CACNR,QCNGS,EAAcC,IAAMC,gBAIbC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACMC,EAAUC,cAEhBC,qBAAU,WACNrB,EAAKsB,oBAAmB,SAACL,GACrBC,EAAQD,GACRD,GAAW,GAERC,GAAME,EAAQI,KAAK,eAE3B,CAACN,EAAME,IAEV,IAAMK,EAAQ,CAAEP,QAEhB,OACI,kBAACR,EAAYgB,SAAb,CAAsBD,MAAOA,IACrBT,GAAWF,I,kDCkEZa,EAnFD,WAEV,IAAMP,EAAUC,cACRH,EDNiBU,qBAAWlB,GCM5BQ,KACR,EAA8BH,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAY,QAAQC,IAAIZ,GAGZ,IAAMa,EAAY,uCAAG,sBAAAC,EAAA,sEACX/B,EAAKgC,UADM,OAGjBb,EAAQI,KAAK,KAHI,2CAAH,qDAMZU,EAAO,uCAAG,WAAOC,GAAP,iBAAAH,EAAA,sEACWI,MAAMD,GADjB,cACNE,EADM,gBAEOA,EAASC,OAFhB,cAENC,EAFM,yBAIL,IAAIC,KAAK,CAACD,GAAO,gBAAiB,CAAEE,KAAM,gBAJrC,2CAAH,sDA4Cb,OArCAnB,qBAAU,WACFJ,EAMJwB,IAAMC,IAAI,sCAAuC,CAC7CC,QAAS,CACL,aAAcC,uCACd,YAAa3B,EAAK4B,MAClB,cAAe5B,EAAK6B,OAG3BC,MAAK,WACF/B,GAAW,MAEdgC,OAAM,WACH,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASlC,EAAK4B,OAC9BI,EAASE,OAAO,WAAYlC,EAAK4B,OACjCI,EAASE,OAAO,SAAUlC,EAAK6B,KAE/Bb,EAAQhB,EAAKmC,UACRL,MAAK,SAACM,GACHJ,EAASE,OAAO,SAAUE,EAAQA,EAAOC,MAEzCb,IAAMc,KAAK,mCACPN,EACA,CAAEN,QAAS,CAAE,cAAeC,0CAE/BG,MAAK,kBAAM/B,GAAW,MACtBgC,OAAM,SAACQ,GAAD,OAAW5B,QAAQC,IAAI2B,YA9BtCrC,EAAQI,KAAK,OAiClB,CAACN,EAAME,KAENF,GAAQF,EAAgB,mBAIxB,yBAAK0C,UAAU,cACf,yBAAKA,UAAU,WACX,yBAAKA,UAAU,YAAf,gBAGA,yBAAKC,QAAS5B,EAAc2B,UAAU,cAAtC,WAKA,kBAAC,IAAD,CACIE,OAAO,qBACPC,UAAWhB,uCACXiB,SAAU5C,EAAK4B,MACfiB,WAAY7C,EAAK6B,Q,SClDlBiB,EA9BD,WAIZ,OAFAC,MAAM,oIAIJ,yBAAKC,GAAG,cACH,yBAAKA,GAAK,cACN,oDAGI,yBACER,UAAU,sBACVC,QAAW,kBAAM1D,EAAKkE,mBAAmB,IAAIjE,IAASD,KAAKmE,sBAEvD,kBAACC,EAAA,EAAD,MAJN,yBAQA,6BAZR,IAYe,gCCFTC,MAff,WACE,OACE,yBAAKC,MAAO,CAAEC,WAAY,WACxB,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAW/C,IAChC,kBAAC,IAAD,CAAO8C,KAAK,IAAIC,UAAWV,SCXvCW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9bba0fd6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\n\r\nexport const auth = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDpGthbWfCUTMgGZL6FzvUs-LX5f6D1Y4U\",\r\n  authDomain: \"daniel-chats-auth.firebaseapp.com\",\r\n  projectId: \"daniel-chats-auth\",\r\n  storageBucket: \"daniel-chats-auth.appspot.com\",\r\n  messagingSenderId: \"649273787724\",\r\n  appId: \"1:649273787724:web:4da4c38658be5252f5bbe9\"\r\n}).auth();\r\n","import React, { useContext, useState, useEffect, Children } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\n\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [user, setUser] = useState(null);\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            setUser(user);\r\n            setLoading(false);\r\n\r\n            if(user) history.push('/chats');\r\n        })\r\n    }, [user, history]);\r\n\r\n    const value = { user };\r\n\r\n    return(\r\n        <AuthContext.Provider value={value}>\r\n             {! loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n\r\n}","import React, { useRef, useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ChatEngine } from 'react-chat-engine';\r\nimport { auth } from '../firebase';\r\n\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst Chats = () => {\r\n    \r\n    const history = useHistory();\r\n    const { user } = useAuth();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    console.log(user);\r\n\r\n   \r\n    const handleLogout = async () => {\r\n        await auth.signOut();\r\n\r\n        history.push('/');\r\n    }\r\n\r\n    const getFile = async (url) => {\r\n        const response = await fetch(url);\r\n        const data = await response.blob();\r\n\r\n        return new File([data], \"userPhoto.jpg\", { type: 'image/jpeg' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!user) {\r\n            history.push('/');\r\n\r\n            return;\r\n        }\r\n\r\n        axios.get('https://api.chatengine.io/users/me/', {\r\n            headers: { \r\n                \"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID,\r\n                \"user-name\": user.email,\r\n                \"user-secret\": user.uid,\r\n            }\r\n        })\r\n        .then(() => {\r\n            setLoading(false);\r\n        })\r\n        .catch(() => {\r\n            let formdata = new FormData();\r\n            formdata.append('email', user.email);\r\n            formdata.append('username', user.email);\r\n            formdata.append('secret', user.uid);\r\n\r\n            getFile(user.photoURL)\r\n                .then((avatar) => {\r\n                    formdata.append('avatar', avatar, avatar.name);\r\n\r\n                    axios.post('https://api.chatengine.io/users/',\r\n                        formdata,\r\n                        { headers: { \"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY } }\r\n                    )\r\n                    .then(() => setLoading(false))\r\n                    .catch((error) => console.log(error))\r\n                })\r\n        })\r\n    }, [user, history]);\r\n\r\n    if(!user || loading) return 'Loading Chats...';\r\n\r\n    return (\r\n\r\n        <div className=\"chats-page\">\r\n        <div className=\"nav-bar\">\r\n            <div className=\"logo-tab\">\r\n                Daniel Chats\r\n            </div>\r\n            <div onClick={handleLogout} className=\"logout-tab\">\r\n                Logout\r\n            </div>\r\n        </div>\r\n\r\n            <ChatEngine \r\n                height=\"calc(100vh - 66px)\"\r\n                projectID={process.env.REACT_APP_CHAT_ENGINE_ID}\r\n                userName={user.email}\r\n                userSecret={user.uid}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chats;","import React from 'react'\r\nimport { GoogleOutlined} from '@ant-design/icons'\r\nimport \"firebase/app\"\r\n\r\nimport { auth } from '../firebase';\r\nimport firebase from 'firebase/app'\r\n\r\nconst Login = () => {\r\n  \r\n  alert(\"Welcome to Daniel Chats! You can have a private converstaion with me and even have a group conversation. Feel free to say hi! :)\");\r\n \r\n  return(\r\n\r\n    <div id=\"login-page\">\r\n         <div id = \"login-card\">\r\n             <h2>Welcome Daniel Chats</h2>\r\n            \r\n\r\n                 <div\r\n                   className=\"login-button google\"\r\n                   onClick = {() => auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())}\r\n                   >\r\n                       <GoogleOutlined/> Continue with Google\r\n\r\n                   </div>\r\n\r\n                 <br /> <br />\r\n\r\n                 \r\n\r\n         </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default Login","import React from \"react\"\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport { AuthProvider } from \"../contexts/AuthContext\"\n\nimport Chats from \"./Chats\"\nimport Login from \"./Login\"\n\nfunction App() {\n  return (\n    <div style={{ fontFamily: 'Avenir' }}>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/chats\" component={Chats} />\n            <Route path=\"/\" component={Login} /> \n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}